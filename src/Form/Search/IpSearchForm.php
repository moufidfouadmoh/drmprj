<?php

namespace App\Form\Search;


use App\Entity\Agence;
use App\Entity\Bureau;
use App\Entity\Includes\Search\IpSearch;
use App\Repository\AgenceRepository;
use App\Utils\Type\Choice\IleChoiceType;
use Doctrine\ORM\EntityRepository;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;

class IpSearchForm extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('address',TextType::class,[
                'required' => false,
                'label' => 'app.ip.search.fields.address'
            ])
            ->add('agences',EntityType::class,[
                'required' => false,
                'label' => false,
                'class' => Agence::class,
                'query_builder' => function(AgenceRepository $repository){
                    $qb = $repository->createQueryBuilder('agence');
                    $qb
                        ->leftJoin('agence.lieu','lieu')
                        ->addSelect('lieu')
                        ->andWhere('lieu.ile = :ile')
                        ->setParameter('ile',IleChoiceType::MWALI)
                    ;
                    return $qb;
                },
                'choice_label' => 'nom',
                'choice_value' => 'nom',
                'multiple' => true
            ])
            ->add('bureaus',EntityType::class,[
                'required' => false,
                'label' => false,
                'class' => Bureau::class,
                'query_builder' => function(EntityRepository $repository){
                    $qb = $repository->createQueryBuilder('bureau')->from(Bureau::class,'b');
                    $qb
                        ->leftJoin('bureau.agences','agences')
                        ->addSelect('agences')
                        ->leftJoin('agences.lieu','lieu')
                        ->addSelect('lieu')
                        ->andWhere('lieu.ile = :ile')
                        ->setParameter('ile',IleChoiceType::MWALI)
                    ;
                    return $qb;
                },
                'choice_label' => 'nom',
                'choice_value' => 'nom',
                'multiple' => true
            ])
        ;

    }

    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults([
            'data_class' => IpSearch::class,
            'method' => 'GET',
            'csrf_protection' => false
        ]);
    }

    public function getBlockPrefix()
    {
        return ''; // TODO: Change the autogenerated stub
    }
}